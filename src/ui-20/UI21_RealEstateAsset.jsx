import React, { useState } from 'react'

export default function UI21_RealEstateAsset() {
  const [activeTab, setActiveTab] = useState('dashboard')
  const [selectedFilter, setSelectedFilter] = useState('all')
  const [showMap, setShowMap] = useState(false)

  return (
    <div className="p-6 max-w-7xl mx-auto">
      {/* Header */}
      <div className="mb-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-2xl font-bold text-gray-900">Real Estate Portfolio</h1>
            <p className="text-gray-600">Qu·∫£n l√Ω danh m·ª•c ƒë·∫ßu t∆∞ b·∫•t ƒë·ªông s·∫£n</p>
          </div>
          <div className="flex items-center gap-3">
            <button 
              onClick={() => setShowMap(!showMap)}
              className={`px-4 py-2 border rounded-lg ${showMap ? 'bg-blue-50 border-blue-300 text-blue-600' : 'border-gray-300 hover:bg-gray-50'}`}
            >
              {showMap ? '·∫®n b·∫£n ƒë·ªì' : 'Xem b·∫£n ƒë·ªì'}
            </button>
            <button className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
              Th√™m BƒêS
            </button>
          </div>
        </div>
      </div>

      {/* Portfolio Value Summary */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
        {[
          { 
            label: "T·ªïng gi√° tr·ªã danh m·ª•c", 
            value: "‚Ç´ 1,247 t·ª∑", 
            change: "+12.8%", 
            period: "YTD",
            icon: "üè¢",
            color: "blue" 
          },
          { 
            label: "T·ª∑ su·∫•t l·ª£i nhu·∫≠n", 
            value: "8.4%", 
            change: "+1.2%", 
            period: "NƒÉm nay",
            icon: "üìà",
            color: "green" 
          },
          { 
            label: "Doanh thu cho thu√™", 
            value: "‚Ç´ 42.3 t·ª∑", 
            change: "+5.7%", 
            period: "NƒÉm nay",
            icon: "üí∞",
            color: "purple" 
          },
          { 
            label: "T·ª∑ l·ªá l·∫•p ƒë·∫ßy", 
            value: "94.2%", 
            change: "+2.1%", 
            period: "Th√°ng n√†y",
            icon: "üè†",
            color: "orange" 
          }
        ].map(stat => (
          <div key={stat.label} className="bg-white rounded-xl border border-gray-200 p-6">
            <div className="flex items-center justify-between mb-3">
              <div className="text-2xl">{stat.icon}</div>
              <div className={`text-sm font-medium px-2 py-1 rounded-full ${
                stat.change.startsWith('+') ? 'bg-green-100 text-green-600' : 'bg-red-100 text-red-600'
              }`}>
                {stat.change}
              </div>
            </div>
            <div>
              <p className="text-sm text-gray-600">{stat.label}</p>
              <p className="text-2xl font-bold text-gray-900">{stat.value}</p>
              <p className="text-xs text-gray-500">{stat.period}</p>
            </div>
          </div>
        ))}
      </div>

      {/* Map View (when enabled) */}
      {showMap && (
        <div className="mb-6 bg-white rounded-xl border border-gray-200 p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">B·∫£n ƒë·ªì t√†i s·∫£n</h3>
          <div className="h-64 bg-gray-100 rounded-lg flex items-center justify-center">
            <div className="text-center text-gray-500">
              <div className="text-4xl mb-2">üó∫Ô∏è</div>
              <p>B·∫£n ƒë·ªì hi·ªÉn th·ªã v·ªã tr√≠ c√°c t√†i s·∫£n BƒêS</p>
              <p className="text-sm mt-1">T√≠ch h·ª£p v·ªõi Google Maps/OpenStreetMap</p>
            </div>
          </div>
        </div>
      )}

      {/* Tab Navigation */}
      <div className="mb-6">
        <div className="border-b border-gray-200">
          <nav className="-mb-px flex space-x-8">
            {[
              { id: 'dashboard', name: 'T·ªïng quan' },
              { id: 'properties', name: 'T√†i s·∫£n' },
              { id: 'income', name: 'Thu nh·∫≠p' },
              { id: 'expenses', name: 'Chi ph√≠' },
              { id: 'analytics', name: 'Ph√¢n t√≠ch' },
              { id: 'market', name: 'Th·ªã tr∆∞·ªùng' }
            ].map(tab => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`py-2 px-1 border-b-2 font-medium text-sm ${
                  activeTab === tab.id
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700'
                }`}
              >
                {tab.name}
              </button>
            ))}
          </nav>
        </div>
      </div>

      {/* Content based on active tab */}
      {activeTab === 'dashboard' && (
        <div className="space-y-6">
          {/* Property Categories */}
          <div className="bg-white rounded-xl border border-gray-200 p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">Ph√¢n b·ªï theo lo·∫°i t√†i s·∫£n</h3>
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
              {[
                { 
                  type: "CƒÉn h·ªô chung c∆∞", 
                  count: 45, 
                  value: "‚Ç´ 520 t·ª∑", 
                  percentage: 42,
                  color: "bg-blue-500",
                  icon: "üè¢"
                },
                { 
                  type: "Nh√† ri√™ng l·∫ª", 
                  count: 23, 
                  value: "‚Ç´ 280 t·ª∑", 
                  percentage: 22,
                  color: "bg-green-500",
                  icon: "üè†"
                },
                { 
                  type: "VƒÉn ph√≤ng", 
                  count: 12, 
                  value: "‚Ç´ 310 t·ª∑", 
                  percentage: 25,
                  color: "bg-purple-500",
                  icon: "üè¢"
                },
                { 
                  type: "Th∆∞∆°ng m·∫°i", 
                  count: 8, 
                  value: "‚Ç´ 137 t·ª∑", 
                  percentage: 11,
                  color: "bg-orange-500",
                  icon: "üè™"
                }
              ].map(category => (
                <div key={category.type} className="p-4 bg-gray-50 rounded-lg">
                  <div className="flex items-center gap-3 mb-3">
                    <div className="text-2xl">{category.icon}</div>
                    <div>
                      <h4 className="font-medium text-gray-900">{category.type}</h4>
                      <p className="text-sm text-gray-600">{category.count} t√†i s·∫£n</p>
                    </div>
                  </div>
                  <div className="mb-2">
                    <div className="flex justify-between text-sm mb-1">
                      <span className="text-gray-600">Gi√° tr·ªã</span>
                      <span className="font-medium">{category.value}</span>
                    </div>
                    <div className="w-full bg-gray-200 rounded-full h-2">
                      <div 
                        className={`${category.color} h-2 rounded-full transition-all duration-300`}
                        style={{ width: `${category.percentage}%` }}
                      ></div>
                    </div>
                  </div>
                  <p className="text-xs text-gray-500">{category.percentage}% c·ªßa t·ªïng danh m·ª•c</p>
                </div>
              ))}
            </div>
          </div>

          {/* Top Performing Properties */}
          <div className="bg-white rounded-xl border border-gray-200 p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">T√†i s·∫£n c√≥ hi·ªáu su·∫•t cao nh·∫•t</h3>
            <div className="overflow-x-auto">
              <table className="w-full">
                <thead>
                  <tr className="border-b border-gray-200">
                    <th className="text-left py-2 px-4 font-medium text-gray-900">T√†i s·∫£n</th>
                    <th className="text-left py-2 px-4 font-medium text-gray-900">Lo·∫°i</th>
                    <th className="text-left py-2 px-4 font-medium text-gray-900">Gi√° tr·ªã hi·ªán t·∫°i</th>
                    <th className="text-left py-2 px-4 font-medium text-gray-900">ROI</th>
                    <th className="text-left py-2 px-4 font-medium text-gray-900">Thu nh·∫≠p/th√°ng</th>
                    <th className="text-left py-2 px-4 font-medium text-gray-900">T·ª∑ l·ªá l·∫•p ƒë·∫ßy</th>
                  </tr>
                </thead>
                <tbody>
                  {[
                    {
                      name: "Vinhomes Central Park T3",
                      type: "Chung c∆∞ cao c·∫•p",
                      value: "‚Ç´ 28.5 t·ª∑",
                      roi: "+15.2%",
                      income: "‚Ç´ 180M",
                      occupancy: "100%"
                    },
                    {
                      name: "Saigon Centre Office",
                      type: "VƒÉn ph√≤ng",
                      value: "‚Ç´ 45.3 t·ª∑",
                      roi: "+12.8%",
                      income: "‚Ç´ 320M",
                      occupancy: "95%"
                    },
                    {
                      name: "Diamond Plaza Shop",
                      type: "Th∆∞∆°ng m·∫°i",
                      value: "‚Ç´ 15.7 t·ª∑",
                      roi: "+11.4%",
                      income: "‚Ç´ 125M",
                      occupancy: "88%"
                    }
                  ].map((property, index) => (
                    <tr key={index} className="border-b border-gray-100 hover:bg-gray-50">
                      <td className="py-3 px-4">
                        <div className="font-medium text-gray-900">{property.name}</div>
                      </td>
                      <td className="py-3 px-4 text-gray-600">{property.type}</td>
                      <td className="py-3 px-4 font-medium">{property.value}</td>
                      <td className="py-3 px-4">
                        <span className="text-green-600 font-medium">{property.roi}</span>
                      </td>
                      <td className="py-3 px-4 font-medium">{property.income}</td>
                      <td className="py-3 px-4">
                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                          property.occupancy === '100%' ? 'bg-green-100 text-green-800' :
                          property.occupancy === '95%' ? 'bg-blue-100 text-blue-800' :
                          'bg-yellow-100 text-yellow-800'
                        }`}>
                          {property.occupancy}
                        </span>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>

          {/* Market Insights */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="bg-white rounded-xl border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Tin t·ª©c th·ªã tr∆∞·ªùng</h3>
              <div className="space-y-4">
                {[
                  {
                    title: "Th·ªã tr∆∞·ªùng BƒêS TP.HCM tƒÉng tr∆∞·ªüng 8.5% trong Q3",
                    source: "VnEconomy",
                    time: "2 gi·ªù tr∆∞·ªõc"
                  },
                  {
                    title: "L√£i su·∫•t vay mua nh√† gi·∫£m xu·ªëng 6.8%/nƒÉm",
                    source: "Cafef",
                    time: "5 gi·ªù tr∆∞·ªõc"
                  },
                  {
                    title: "Ph√¢n kh√∫c vƒÉn ph√≤ng h·∫°ng A khan hi·∫øm ngu·ªìn cung",
                    source: "CBRE Vietnam",
                    time: "1 ng√†y tr∆∞·ªõc"
                  }
                ].map((news, index) => (
                  <div key={index} className="p-3 bg-gray-50 rounded-lg hover:bg-gray-100 cursor-pointer">
                    <h4 className="font-medium text-gray-900 text-sm mb-1">{news.title}</h4>
                    <p className="text-xs text-gray-500">{news.source} ‚Ä¢ {news.time}</p>
                  </div>
                ))}
              </div>
            </div>

            <div className="bg-white rounded-xl border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">C·∫£nh b√°o & Khuy·∫øn ngh·ªã</h3>
              <div className="space-y-4">
                {[
                  {
                    type: "warning",
                    title: "H·ª£p ƒë·ªìng thu√™ s·∫Øp h·∫øt h·∫°n",
                    desc: "3 h·ª£p ƒë·ªìng s·∫Ω h·∫øt h·∫°n trong 30 ng√†y t·ªõi",
                    action: "Xem chi ti·∫øt"
                  },
                  {
                    type: "info",
                    title: "C∆° h·ªôi ƒë·∫ßu t∆∞ m·ªõi",
                    desc: "Ph√¢n kh√∫c shophouse t·∫°i Qu·∫≠n 2 ƒëang c√≥ tri·ªÉn v·ªçng t·ªët",
                    action: "Kh√°m ph√°"
                  },
                  {
                    type: "success",
                    title: "Hi·ªáu su·∫•t v∆∞·ª£t mong ƒë·ª£i",
                    desc: "Danh m·ª•c c·ªßa b·∫°n ƒë√£ tƒÉng tr∆∞·ªüng 12.8% trong nƒÉm nay",
                    action: "Xem b√°o c√°o"
                  }
                ].map((alert, index) => (
                  <div key={index} className={`p-4 rounded-lg border ${
                    alert.type === 'warning' ? 'bg-yellow-50 border-yellow-200' :
                    alert.type === 'info' ? 'bg-blue-50 border-blue-200' :
                    'bg-green-50 border-green-200'
                  }`}>
                    <h4 className="font-medium text-gray-900 text-sm mb-1">{alert.title}</h4>
                    <p className="text-sm text-gray-600 mb-2">{alert.desc}</p>
                    <button className={`text-sm font-medium ${
                      alert.type === 'warning' ? 'text-yellow-600' :
                      alert.type === 'info' ? 'text-blue-600' :
                      'text-green-600'
                    }`}>
                      {alert.action} ‚Üí
                    </button>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      )}

      {activeTab === 'analytics' && (
        <div className="space-y-6">
          {/* Performance Charts */}
          <div className="bg-white rounded-xl border border-gray-200 p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">Bi·ªÉu ƒë·ªì hi·ªáu su·∫•t danh m·ª•c</h3>
            <div className="h-64 bg-gray-50 rounded-lg flex items-center justify-center">
              <div className="text-center text-gray-500">
                <div className="text-4xl mb-2">üìä</div>
                <p>Bi·ªÉu ƒë·ªì tƒÉng tr∆∞·ªüng gi√° tr·ªã danh m·ª•c theo th·ªùi gian</p>
                <p className="text-sm mt-1">T√≠ch h·ª£p v·ªõi th∆∞ vi·ªán chart (Chart.js, D3.js)</p>
              </div>
            </div>
          </div>

          {/* Comparative Analysis */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="bg-white rounded-xl border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">So s√°nh v·ªõi th·ªã tr∆∞·ªùng</h3>
              <div className="h-48 bg-gray-50 rounded-lg flex items-center justify-center">
                <div className="text-center text-gray-500">
                  <div className="text-2xl mb-2">üìà</div>
                  <p>Bi·ªÉu ƒë·ªì so s√°nh ROI</p>
                </div>
              </div>
            </div>

            <div className="bg-white rounded-xl border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Ph√¢n t√≠ch r·ªßi ro</h3>
              <div className="h-48 bg-gray-50 rounded-lg flex items-center justify-center">
                <div className="text-center text-gray-500">
                  <div className="text-2xl mb-2">‚ö†Ô∏è</div>
                  <p>ƒê√°nh gi√° r·ªßi ro danh m·ª•c</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}
